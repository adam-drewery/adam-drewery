@page "/search"
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager NavigationManager
@inject SiteContext SiteContext

@code {

    public string? SearchTerm { get; set; }

    protected override Task OnParametersSetAsync()
    {
        var query = QueryHelpers.ParseQuery(NavigationManager.ToAbsoluteUri(NavigationManager.Uri).Query);
        SearchTerm = query.TryGetValue("q", out var searchTerm) ? searchTerm.ToString() : "";
        return base.OnParametersSetAsync();
    }

}

<div class="page-wrapper">
    <section>
        <div class="container">
            <a href="/" class="btn btn-outline-custom">
                <i class="mdi mdi-step-backward"></i>
                Go back
            </a>
            <div class="row">
                <div class="col-lg-12">
                    <div class="page-title">
                        <div class="row">
                            <div class="col-md-9 col-xs-12">
                                <h2>
                                    <span>Search results for "@SearchTerm"</span>
                                </h2>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="mt-3 pb-3">
        <div class="container">
            <div class="row">
                <div class="col-xl-8">
                    @{
                        var posts = SiteContext.Posts
                            .Where(p => p.Title.Contains(SearchTerm ?? "", StringComparison.OrdinalIgnoreCase));
                    }
                    @foreach (var post in posts)
                    {
                        <PostTitle Post="@post" />
                    }
                    <Pagination/>
                </div>
            </div>
        </div>
    </section>
</div>