@inject HttpClient Http
@inject IJSRuntime JSRuntime
@page "/post/{Id}"
@using Markdig

@code {
    [Parameter]
    public string? Id { get; set; }

    string? _content;

    protected override async Task OnParametersSetAsync()
    {
        var markdown  = await Http.GetStringAsync($"https://raw.githubusercontent.com/adam-drewery/blog/main/content/{Id}.md")
                        ?? throw new InvalidOperationException("Failed to get blog content");

        _content = Markdown.ToHtml(markdown);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("highlightCode");
    }

}

<div class="page-wrapper">
<section class="pb-5">
    <div class="container">
        <div class="row pt-5">
            <div class="col-xl-8">

                @if (_content != null)
                {
                    @((MarkupString)_content)
                }
            </div>
        </div>

    </div>
</section>
</div>